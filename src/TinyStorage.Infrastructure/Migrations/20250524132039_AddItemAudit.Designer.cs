// <auto-generated />
using System;
using Itmo.TinyStorage.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Itmo.TinyStorage.Infrastructure.Migrations
{
    [DbContext(typeof(TinyStorageContext))]
    [Migration("20250524132039_AddItemAudit")]
    partial class AddItemAudit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("tiny_storage")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Itmo.TinyStorage.Infrastructure.Items.ItemAuditModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("EditedBy")
                        .HasColumnType("integer")
                        .HasColumnName("edited_by");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("item_id");

                    b.Property<string>("Property")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("property");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_item_audits");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("ix_item_audits_item_id");

                    b.ToTable("item_audits", "tiny_storage");
                });

            modelBuilder.Entity("Itmo.TinyStorage.Infrastructure.Items.ItemModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("TakenBy")
                        .HasColumnType("integer")
                        .HasColumnName("taken_by");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_items");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_items_name");

                    b.ToTable("items", "tiny_storage");
                });

            modelBuilder.Entity("Itmo.TinyStorage.Infrastructure.Items.ItemAuditModel", b =>
                {
                    b.HasOne("Itmo.TinyStorage.Infrastructure.Items.ItemModel", "ItemModel")
                        .WithMany("ItemAuditModels")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_item_audits_items_item_id");

                    b.Navigation("ItemModel");
                });

            modelBuilder.Entity("Itmo.TinyStorage.Infrastructure.Items.ItemModel", b =>
                {
                    b.Navigation("ItemAuditModels");
                });
#pragma warning restore 612, 618
        }
    }
}
